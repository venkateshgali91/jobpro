{
  "version": 3,
  "sources": ["../../react-range/lib/types.js", "../../react-range/lib/utils.js", "../../react-range/lib/Range.js", "../../react-range/lib/index.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Direction = void 0;\nvar Direction;\n(function (Direction) {\n    Direction[\"Right\"] = \"to right\";\n    Direction[\"Left\"] = \"to left\";\n    Direction[\"Down\"] = \"to bottom\";\n    Direction[\"Up\"] = \"to top\";\n})(Direction = exports.Direction || (exports.Direction = {}));\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useThumbOverlap = exports.assertUnreachable = exports.voidFn = exports.getTrackBackground = exports.replaceAt = exports.schd = exports.translate = exports.getClosestThumbIndex = exports.translateThumbs = exports.getPaddingAndBorder = exports.getMargin = exports.checkInitialOverlap = exports.checkValuesAgainstBoundaries = exports.checkBoundaries = exports.isVertical = exports.relativeValue = exports.normalizeValue = exports.isStepDivisible = exports.isTouchEvent = exports.getStepDecimals = void 0;\nvar react_1 = require(\"react\");\nvar types_1 = require(\"./types\");\nvar getStepDecimals = function (step) {\n    var decimals = step.toString().split('.')[1];\n    return decimals ? decimals.length : 0;\n};\nexports.getStepDecimals = getStepDecimals;\nfunction isTouchEvent(event) {\n    return ((event.touches && event.touches.length) ||\n        (event.changedTouches && event.changedTouches.length));\n}\nexports.isTouchEvent = isTouchEvent;\nfunction isStepDivisible(min, max, step) {\n    var res = (max - min) / step;\n    var precision = 8;\n    var roundedRes = Number(res.toFixed(precision));\n    return parseInt(roundedRes.toString(), 10) === roundedRes;\n}\nexports.isStepDivisible = isStepDivisible;\nfunction normalizeValue(value, index, min, max, step, allowOverlap, values) {\n    var BIG_NUM = 10e10;\n    value = Math.round(value * BIG_NUM) / BIG_NUM;\n    if (!allowOverlap) {\n        var prev = values[index - 1];\n        var next = values[index + 1];\n        if (prev && prev > value)\n            return prev;\n        if (next && next < value)\n            return next;\n    }\n    if (value > max)\n        return max;\n    if (value < min)\n        return min;\n    // `remainder` is a difference between the given value and a full step value\n    // that is closest lower to the given value and is in the range between the min value\n    // and the given value\n    var remainder = Math.floor(value * BIG_NUM - min * BIG_NUM) %\n        Math.floor(step * BIG_NUM);\n    var closestLowerNum = Math.floor(value * BIG_NUM - Math.abs(remainder));\n    var rounded = remainder === 0 ? value : closestLowerNum / BIG_NUM;\n    // Values with a remainder `< step/2` are rounded to the closest lower value\n    // while values with a remainder `= > step/2` are rounded to the closest bigger value\n    var res = Math.abs(remainder / BIG_NUM) < step / 2\n        ? rounded\n        : rounded + step;\n    var decimalPlaces = (0, exports.getStepDecimals)(step);\n    return parseFloat(res.toFixed(decimalPlaces));\n}\nexports.normalizeValue = normalizeValue;\nfunction relativeValue(value, min, max) {\n    return (value - min) / (max - min);\n}\nexports.relativeValue = relativeValue;\nfunction isVertical(direction) {\n    return direction === types_1.Direction.Up || direction === types_1.Direction.Down;\n}\nexports.isVertical = isVertical;\nfunction checkBoundaries(value, min, max) {\n    if (min >= max) {\n        throw new RangeError(\"min (\".concat(min, \") is equal/bigger than max (\").concat(max, \")\"));\n    }\n    if (value < min) {\n        throw new RangeError(\"value (\".concat(value, \") is smaller than min (\").concat(min, \")\"));\n    }\n    if (value > max) {\n        throw new RangeError(\"value (\".concat(value, \") is bigger than max (\").concat(max, \")\"));\n    }\n}\nexports.checkBoundaries = checkBoundaries;\nfunction checkValuesAgainstBoundaries(value, min, max) {\n    if (value < min) {\n        // set selectedValue to min\n        return min;\n    }\n    if (value > max) {\n        // set selectedValue to max\n        return max;\n    }\n    else {\n        return value;\n    }\n}\nexports.checkValuesAgainstBoundaries = checkValuesAgainstBoundaries;\nfunction checkInitialOverlap(values) {\n    if (values.length < 2)\n        return;\n    if (!values.slice(1).every(function (item, i) { return values[i] <= item; })) {\n        throw new RangeError(\"values={[\".concat(values, \"]} needs to be sorted when allowOverlap={false}\"));\n    }\n}\nexports.checkInitialOverlap = checkInitialOverlap;\nfunction getMargin(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['margin-top'], 10),\n        bottom: parseInt(style['margin-bottom'], 10),\n        left: parseInt(style['margin-left'], 10),\n        right: parseInt(style['margin-right'], 10)\n    };\n}\nexports.getMargin = getMargin;\nfunction getPaddingAndBorder(element) {\n    var style = window.getComputedStyle(element);\n    return {\n        top: parseInt(style['padding-top'], 10) + parseInt(style['border-top-width'], 10),\n        bottom: parseInt(style['padding-bottom'], 10) + parseInt(style['border-bottom-width'], 10),\n        left: parseInt(style['padding-left'], 10) + parseInt(style['border-left-width'], 10),\n        right: parseInt(style['padding-right'], 10) + parseInt(style['border-right-width'], 10),\n    };\n}\nexports.getPaddingAndBorder = getPaddingAndBorder;\nfunction translateThumbs(elements, offsets, rtl) {\n    var inverter = rtl ? -1 : 1;\n    elements.forEach(function (element, index) {\n        return translate(element, inverter * offsets[index].x, offsets[index].y);\n    });\n}\nexports.translateThumbs = translateThumbs;\n/**\n * Util function for calculating the index of the thumb that is closes to a given position\n * @param thumbs - array of Thumb element to calculate the distance from\n * @param clientX - target x position (mouse/touch)\n * @param clientY - target y position (mouse/touch)\n * @param direction - the direction of the track\n */\nfunction getClosestThumbIndex(thumbs, clientX, clientY, direction) {\n    var thumbIndex = 0;\n    var minThumbDistance = getThumbDistance(thumbs[0], clientX, clientY, direction);\n    for (var i = 1; i < thumbs.length; i++) {\n        var thumbDistance = getThumbDistance(thumbs[i], clientX, clientY, direction);\n        if (thumbDistance < minThumbDistance) {\n            minThumbDistance = thumbDistance;\n            thumbIndex = i;\n        }\n    }\n    return thumbIndex;\n}\nexports.getClosestThumbIndex = getClosestThumbIndex;\nfunction translate(element, x, y) {\n    element.style.transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n}\nexports.translate = translate;\n// adapted from https://github.com/alexreardon/raf-schd\nvar schd = function (fn) {\n    var lastArgs = [];\n    var frameId = null;\n    var wrapperFn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        lastArgs = args;\n        if (frameId) {\n            return;\n        }\n        frameId = requestAnimationFrame(function () {\n            frameId = null;\n            fn.apply(void 0, lastArgs);\n        });\n    };\n    return wrapperFn;\n};\nexports.schd = schd;\nfunction replaceAt(values, index, value) {\n    var ret = values.slice(0);\n    ret[index] = value;\n    return ret;\n}\nexports.replaceAt = replaceAt;\nfunction getTrackBackground(_a) {\n    var values = _a.values, colors = _a.colors, min = _a.min, max = _a.max, _b = _a.direction, direction = _b === void 0 ? types_1.Direction.Right : _b, _c = _a.rtl, rtl = _c === void 0 ? false : _c;\n    if (rtl && direction === types_1.Direction.Right) {\n        direction = types_1.Direction.Left;\n    }\n    else if (rtl && types_1.Direction.Left) {\n        direction = types_1.Direction.Right;\n    }\n    // sort values ascending\n    var progress = values.slice(0).sort(function (a, b) { return a - b; }).map(function (value) { return ((value - min) / (max - min)) * 100; });\n    var middle = progress.reduce(function (acc, point, index) {\n        return \"\".concat(acc, \", \").concat(colors[index], \" \").concat(point, \"%, \").concat(colors[index + 1], \" \").concat(point, \"%\");\n    }, '');\n    return \"linear-gradient(\".concat(direction, \", \").concat(colors[0], \" 0%\").concat(middle, \", \").concat(colors[colors.length - 1], \" 100%)\");\n}\nexports.getTrackBackground = getTrackBackground;\nfunction voidFn() { }\nexports.voidFn = voidFn;\nfunction assertUnreachable(x) {\n    throw new Error(\"Didn't expect to get here\");\n}\nexports.assertUnreachable = assertUnreachable;\n/**\n * Util function for grabbing the true largest width of a thumb\n * including the label\n * @param thumbEl - Thumb element to grab the largest width from\n * @param value - Thumb value, not label value\n * @param separator - Label separator value\n */\nvar getThumbWidth = function (thumbEl, value, separator, decimalPlaces, valueToLabel) {\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var width = Math.ceil(__spreadArray([thumbEl], Array.from(thumbEl.children), true).reduce(function (width, el) {\n        var elWidth = Math.ceil(el.getBoundingClientRect().width);\n        /**\n         * If a label contains a merged label value, it won't return the true\n         * label width for that Thumb. Clone the label and change the value\n         * to that individual Thumb value in order to grab the true width.\n         */\n        if (el.innerText &&\n            el.innerText.includes(separator) &&\n            el.childElementCount === 0) {\n            var elClone = el.cloneNode(true);\n            elClone.innerHTML = valueToLabel(value.toFixed(decimalPlaces));\n            elClone.style.visibility = 'hidden';\n            document.body.appendChild(elClone);\n            elWidth = Math.ceil(elClone.getBoundingClientRect().width);\n            document.body.removeChild(elClone);\n        }\n        return elWidth > width ? elWidth : width;\n    }, thumbEl.getBoundingClientRect().width));\n    return width;\n};\n/**\n * Bulk of logic for thumb overlaps\n * Consider a scenario with 5 thumbs;\n * Thumb 1 overlaps with thumb 0 and thumb 2\n * Thumb 2 overlaps with thumb 3\n * We need an array that contains [0, 1, 2, 3]\n * The function needs to return the directly overlapping thumbs\n * and all thumbs overlapping linked to those and so on\n * @param index - Thumb index calculating overlaps for\n * @param offsets - Current Array of Thumb offsets for Range\n * @param thumbs - Array of Thumb elements\n * @param values - Array of Thumb values\n * @param separator - String separator for merged label values\n * @returns overlaps - Array of all overlapping thumbs from the index\n */\nvar getOverlaps = function (index, offsets, thumbs, values, separator, decimalPlaces, valueToLabel) {\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var overlaps = [];\n    /**\n     * Recursive function for building the overlaps Array\n     * If an overlap is found, find the overlaps for that overlap\n     * @param thumbIndex current Thumb index to find overlaps from\n     */\n    var buildOverlaps = function (thumbIndex) {\n        var thumbXWidth = getThumbWidth(thumbs[thumbIndex], values[thumbIndex], separator, decimalPlaces, valueToLabel);\n        var thumbX = offsets[thumbIndex].x;\n        /**\n         * Iterate through the Thumb offsets, if there is a match\n         * add the thumbIndex and siblingIndex to the overlaps Array\n         *\n         * Then build overlaps from the overlapping siblingIndex\n         */\n        offsets.forEach(function (_a, siblingIndex) {\n            var siblingX = _a.x;\n            var siblingWidth = getThumbWidth(thumbs[siblingIndex], values[siblingIndex], separator, decimalPlaces, valueToLabel);\n            if (thumbIndex !== siblingIndex &&\n                ((thumbX >= siblingX && thumbX <= siblingX + siblingWidth) ||\n                    (thumbX + thumbXWidth >= siblingX &&\n                        thumbX + thumbXWidth <= siblingX + siblingWidth))) {\n                if (!overlaps.includes(siblingIndex)) {\n                    overlaps.push(thumbIndex);\n                    overlaps.push(siblingIndex);\n                    overlaps = __spreadArray(__spreadArray([], overlaps, true), [thumbIndex, siblingIndex], false);\n                    buildOverlaps(siblingIndex);\n                }\n            }\n        });\n    };\n    buildOverlaps(index);\n    // Sort and remove duplicates from the built overlaps\n    return Array.from(new Set(overlaps.sort()));\n};\n/**\n * A custom React Hook for calculating whether a thumb overlaps\n * another and whether labels could/should merge.\n * @param rangeRef - React ref value of Range component\n * @param values - current Range values Array\n * @param index - thumb index\n * @param step - step value, used to calculate the number of decimal places\n * @param separator - string to separate thumb values\n * @returns label value + styling for thumb label\n */\nvar useThumbOverlap = function (rangeRef, values, index, step, separator, valueToLabel) {\n    if (step === void 0) { step = 0.1; }\n    if (separator === void 0) { separator = ' - '; }\n    if (valueToLabel === void 0) { valueToLabel = function (value) { return value; }; }\n    var decimalPlaces = (0, exports.getStepDecimals)(step);\n    // Create initial label style and value. Label value defaults to thumb value\n    var _a = (0, react_1.useState)({}), labelStyle = _a[0], setLabelStyle = _a[1];\n    var _b = (0, react_1.useState)(valueToLabel(values[index].toFixed(decimalPlaces))), labelValue = _b[0], setLabelValue = _b[1];\n    // When the rangeRef or values change, update the Thumb label values and styling\n    (0, react_1.useEffect)(function () {\n        if (rangeRef) {\n            var thumbs = rangeRef.getThumbs();\n            if (thumbs.length < 1)\n                return;\n            var newStyle = {};\n            var offsets_1 = rangeRef.getOffsets();\n            /**\n             * Get any overlaps for the given Thumb index. This must return all linked\n             * Thumbs. So if there are 4 Thumbs and Thumbs 2, 3 and 4 overlap. If we are\n             * getting the overlaps for Thumb 1 and it overlaps only Thumb 2, we must get\n             * 2, 3 and 4 also.\n             */\n            var overlaps = getOverlaps(index, offsets_1, thumbs, values, separator, decimalPlaces, valueToLabel);\n            // Set a default label value of the Thumb value\n            var labelValue_1 = valueToLabel(values[index].toFixed(decimalPlaces));\n            /**\n             * If there are overlaps for the Thumb, we need to calculate the correct\n             * Label value along with the relevant styling. We only want to show a Label\n             * for the left most Thumb in an overlapping set.\n             * All other Thumbs will be set to display: none.\n             */\n            if (overlaps.length) {\n                /**\n                 * Get an Array of the offsets for the overlapping Thumbs\n                 * This is so we can determine if the Thumb we are looking at\n                 * is the left most thumb in an overlapping set\n                 */\n                var offsetsX = overlaps.reduce(function (a, c, i, s) {\n                    return a.length ? __spreadArray(__spreadArray([], a, true), [offsets_1[s[i]].x], false) : [offsets_1[s[i]].x];\n                }, []);\n                /**\n                 * If our Thumb is the left most Thumb, we can build a Label value\n                 * and set the style for that Label\n                 */\n                if (Math.min.apply(Math, offsetsX) === offsets_1[index].x) {\n                    /**\n                     * First calculate the Label value. To do this,\n                     * grab all the values for the Thumbs in our overlaps.\n                     * Then convert that to a Set and sort it whilst removing duplicates.\n                     */\n                    var labelValues_1 = [];\n                    overlaps.forEach(function (thumb) {\n                        labelValues_1.push(values[thumb].toFixed(decimalPlaces));\n                    });\n                    /**\n                     *  Update the labelValue with the resulting Array\n                     *  joined by our defined separator\n                     */\n                    labelValue_1 = Array.from(new Set(labelValues_1.sort(function (a, b) { return parseFloat(a) - parseFloat(b); })))\n                        .map(valueToLabel)\n                        .join(separator);\n                    /**\n                     * Lastly, build the label styling. The label styling will\n                     * position the label and apply a transform so that it's centered.\n                     * We want the center point between the left edge of the left most Thumb\n                     * and the right edge of the right most Thumb.\n                     */\n                    var first = Math.min.apply(Math, offsetsX);\n                    var last = Math.max.apply(Math, offsetsX);\n                    var lastWidth = thumbs[overlaps[offsetsX.indexOf(last)]].getBoundingClientRect().width;\n                    newStyle.left = \"\".concat(Math.abs(first - (last + lastWidth)) / 2, \"px\");\n                    newStyle.transform = 'translate(-50%, 0)';\n                }\n                else {\n                    // If the Thumb isn't the left most Thumb, hide the Label!\n                    newStyle.visibility = 'hidden';\n                }\n            }\n            // Update the label value and style\n            setLabelValue(labelValue_1);\n            setLabelStyle(newStyle);\n        }\n    }, [rangeRef, values]);\n    return [labelValue, labelStyle];\n};\nexports.useThumbOverlap = useThumbOverlap;\n/**\n * Util function for calculating the distance of the center of a thumb\n * form a given mouse/touch target's position\n * @param thumbEl - Thumb element to calculate the distance from\n * @param clientX - target x position (mouse/touch)\n * @param clientY - target y position (mouse/touch)\n * @param direction - the direction of the track\n */\nfunction getThumbDistance(thumbEl, clientX, clientY, direction) {\n    var _a = thumbEl.getBoundingClientRect(), left = _a.left, top = _a.top, width = _a.width, height = _a.height;\n    return isVertical(direction) ? Math.abs(clientY - (top + height / 2)) : Math.abs(clientX - (left + width / 2));\n}\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar utils_1 = require(\"./utils\");\nvar types_1 = require(\"./types\");\nvar INCREASE_KEYS = ['ArrowRight', 'ArrowUp', 'k', 'PageUp'];\nvar DECREASE_KEYS = ['ArrowLeft', 'ArrowDown', 'j', 'PageDown'];\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range(props) {\n        var _this = _super.call(this, props) || this;\n        _this.trackRef = React.createRef();\n        _this.thumbRefs = [];\n        _this.state = {\n            draggedTrackPos: [-1, -1],\n            draggedThumbIndex: -1,\n            thumbZIndexes: new Array(_this.props.values.length).fill(0).map(function (t, i) { return i; }),\n            isChanged: false,\n            markOffsets: []\n        };\n        _this.getOffsets = function () {\n            var _a = _this.props, direction = _a.direction, values = _a.values, min = _a.min, max = _a.max;\n            var trackElement = _this.trackRef.current;\n            var trackRect = trackElement.getBoundingClientRect();\n            var trackPadding = (0, utils_1.getPaddingAndBorder)(trackElement);\n            return _this.getThumbs().map(function (thumb, index) {\n                var thumbOffsets = { x: 0, y: 0 };\n                var thumbRect = thumb.getBoundingClientRect();\n                var thumbMargins = (0, utils_1.getMargin)(thumb);\n                switch (direction) {\n                    case types_1.Direction.Right:\n                        thumbOffsets.x = (thumbMargins.left + trackPadding.left) * -1;\n                        thumbOffsets.y =\n                            ((thumbRect.height - trackRect.height) / 2 + trackPadding.top) * -1;\n                        thumbOffsets.x +=\n                            trackRect.width * (0, utils_1.relativeValue)(values[index], min, max) -\n                                thumbRect.width / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Left:\n                        thumbOffsets.x = (thumbMargins.right + trackPadding.right) * -1;\n                        thumbOffsets.y =\n                            ((thumbRect.height - trackRect.height) / 2 + trackPadding.top) * -1;\n                        thumbOffsets.x +=\n                            trackRect.width -\n                                trackRect.width * (0, utils_1.relativeValue)(values[index], min, max) -\n                                thumbRect.width / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Up:\n                        thumbOffsets.x =\n                            ((thumbRect.width - trackRect.width) / 2 +\n                                thumbMargins.left +\n                                trackPadding.left) *\n                                -1;\n                        thumbOffsets.y = -trackPadding.left;\n                        thumbOffsets.y +=\n                            trackRect.height -\n                                trackRect.height * (0, utils_1.relativeValue)(values[index], min, max) -\n                                thumbRect.height / 2;\n                        return thumbOffsets;\n                    case types_1.Direction.Down:\n                        thumbOffsets.x =\n                            ((thumbRect.width - trackRect.width) / 2 +\n                                thumbMargins.left +\n                                trackPadding.left) *\n                                -1;\n                        thumbOffsets.y = -trackPadding.left;\n                        thumbOffsets.y +=\n                            trackRect.height * (0, utils_1.relativeValue)(values[index], min, max) -\n                                thumbRect.height / 2;\n                        return thumbOffsets;\n                    default:\n                        return (0, utils_1.assertUnreachable)(direction);\n                }\n            });\n        };\n        _this.getThumbs = function () {\n            if (_this.trackRef && _this.trackRef.current) {\n                return Array.from(_this.trackRef.current.children).filter(function (el) {\n                    return el.hasAttribute('aria-valuenow');\n                });\n            }\n            console.warn('No thumbs found in the track container. Did you forget to pass & spread the `props` param in renderTrack?');\n            return [];\n        };\n        _this.getTargetIndex = function (e) {\n            return _this.getThumbs().findIndex(function (child) { return child === e.target || child.contains(e.target); });\n        };\n        _this.addTouchEvents = function (e) {\n            document.addEventListener('touchmove', _this.schdOnTouchMove, {\n                passive: false\n            });\n            document.addEventListener('touchend', _this.schdOnEnd, {\n                passive: false\n            });\n            document.addEventListener('touchcancel', _this.schdOnEnd, {\n                passive: false\n            });\n        };\n        _this.addMouseEvents = function (e) {\n            document.addEventListener('mousemove', _this.schdOnMouseMove);\n            document.addEventListener('mouseup', _this.schdOnEnd);\n        };\n        _this.onMouseDownTrack = function (e) {\n            var _a;\n            if (e.button !== 0)\n                return;\n            e.persist();\n            e.preventDefault();\n            _this.addMouseEvents(e.nativeEvent);\n            if (_this.props.values.length > 1 && _this.props.draggableTrack) {\n                if (_this.thumbRefs.some(function (thumbRef) { var _a; return (_a = thumbRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target); }))\n                    return;\n                // handle dragging the whole track\n                _this.setState({\n                    draggedTrackPos: [e.clientX, e.clientY]\n                }, function () { return _this.onMove(e.clientX, e.clientY); });\n            }\n            else {\n                // get the index of the thumb that is closest to the place where the track is clicked\n                var draggedThumbIndex = (0, utils_1.getClosestThumbIndex)(_this.thumbRefs.map(function (t) { return t.current; }), e.clientX, e.clientY, _this.props.direction);\n                // move the thumb which is closest to the place where the track is clicked\n                (_a = _this.thumbRefs[draggedThumbIndex].current) === null || _a === void 0 ? void 0 : _a.focus();\n                _this.setState({\n                    draggedThumbIndex: draggedThumbIndex\n                }, function () { return _this.onMove(e.clientX, e.clientY); });\n            }\n        };\n        _this.onResize = function () {\n            (0, utils_1.translateThumbs)(_this.getThumbs(), _this.getOffsets(), _this.props.rtl);\n            _this.calculateMarkOffsets();\n        };\n        _this.onTouchStartTrack = function (e) {\n            var _a;\n            e.persist();\n            _this.addTouchEvents(e.nativeEvent);\n            if (_this.props.values.length > 1 && _this.props.draggableTrack) {\n                if (_this.thumbRefs.some(function (thumbRef) { var _a; return (_a = thumbRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target); }))\n                    return;\n                // handle dragging the whole track\n                _this.setState({\n                    draggedTrackPos: [e.touches[0].clientX, e.touches[0].clientY]\n                }, function () { return _this.onMove(e.touches[0].clientX, e.touches[0].clientY); });\n            }\n            else {\n                // get the index of the thumb that is closest to the place where the track is clicked\n                var draggedThumbIndex = (0, utils_1.getClosestThumbIndex)(_this.thumbRefs.map(function (t) { return t.current; }), e.touches[0].clientX, e.touches[0].clientY, _this.props.direction);\n                // move the thumb which is closest to the place where the track is clicked\n                (_a = _this.thumbRefs[draggedThumbIndex].current) === null || _a === void 0 ? void 0 : _a.focus();\n                _this.setState({\n                    draggedThumbIndex: draggedThumbIndex\n                }, function () { return _this.onMove(e.touches[0].clientX, e.touches[0].clientY); });\n            }\n        };\n        _this.onMouseOrTouchStart = function (e) {\n            if (_this.props.disabled)\n                return;\n            var isTouch = (0, utils_1.isTouchEvent)(e);\n            if (!isTouch && e.button !== 0)\n                return;\n            var index = _this.getTargetIndex(e);\n            if (index === -1)\n                return;\n            if (isTouch) {\n                _this.addTouchEvents(e);\n            }\n            else {\n                _this.addMouseEvents(e);\n            }\n            _this.setState({\n                draggedThumbIndex: index,\n                thumbZIndexes: _this.state.thumbZIndexes.map(function (t, i) {\n                    if (i === index) {\n                        return Math.max.apply(Math, _this.state.thumbZIndexes);\n                    }\n                    return t <= _this.state.thumbZIndexes[index] ? t : t - 1;\n                })\n            });\n        };\n        _this.onMouseMove = function (e) {\n            e.preventDefault();\n            _this.onMove(e.clientX, e.clientY);\n        };\n        _this.onTouchMove = function (e) {\n            e.preventDefault();\n            _this.onMove(e.touches[0].clientX, e.touches[0].clientY);\n        };\n        _this.onKeyDown = function (e) {\n            var _a = _this.props, values = _a.values, onChange = _a.onChange, step = _a.step, rtl = _a.rtl, direction = _a.direction;\n            var isChanged = _this.state.isChanged;\n            var index = _this.getTargetIndex(e.nativeEvent);\n            var inverter = rtl || direction === types_1.Direction.Left || direction === types_1.Direction.Down\n                ? -1\n                : 1;\n            if (index === -1)\n                return;\n            if (INCREASE_KEYS.includes(e.key)) {\n                e.preventDefault();\n                _this.setState({\n                    draggedThumbIndex: index,\n                    isChanged: true\n                });\n                onChange((0, utils_1.replaceAt)(values, index, _this.normalizeValue(values[index] + inverter * (e.key === 'PageUp' ? step * 10 : step), index)));\n            }\n            else if (DECREASE_KEYS.includes(e.key)) {\n                e.preventDefault();\n                _this.setState({\n                    draggedThumbIndex: index,\n                    isChanged: true\n                });\n                onChange((0, utils_1.replaceAt)(values, index, _this.normalizeValue(values[index] -\n                    inverter * (e.key === 'PageDown' ? step * 10 : step), index)));\n            }\n            else if (e.key === 'Tab') {\n                _this.setState({ draggedThumbIndex: -1 }, function () {\n                    // If key pressed when thumb was moving, fire onFinalChange\n                    if (isChanged) {\n                        _this.fireOnFinalChange();\n                    }\n                });\n            }\n            else {\n                if (isChanged) {\n                    _this.fireOnFinalChange();\n                }\n            }\n        };\n        _this.onKeyUp = function (e) {\n            var isChanged = _this.state.isChanged;\n            _this.setState({\n                draggedThumbIndex: -1\n            }, function () {\n                if (isChanged) {\n                    _this.fireOnFinalChange();\n                }\n            });\n        };\n        _this.onMove = function (clientX, clientY) {\n            var _a = _this.state, draggedThumbIndex = _a.draggedThumbIndex, draggedTrackPos = _a.draggedTrackPos;\n            var _b = _this.props, direction = _b.direction, min = _b.min, max = _b.max, onChange = _b.onChange, values = _b.values, step = _b.step, rtl = _b.rtl;\n            if (draggedThumbIndex === -1 &&\n                draggedTrackPos[0] === -1 &&\n                draggedTrackPos[1] === -1)\n                return null;\n            var trackElement = _this.trackRef.current;\n            // If component was closed down prematurely, A last onMove could be triggered based on requestAnimationFrame()\n            if (!trackElement)\n                return null;\n            var trackRect = trackElement.getBoundingClientRect();\n            var trackLength = (0, utils_1.isVertical)(direction)\n                ? trackRect.height\n                : trackRect.width;\n            if (draggedTrackPos[0] !== -1 && draggedTrackPos[1] !== -1) {\n                // calculate how much it moved since the last update\n                var dX = clientX - draggedTrackPos[0];\n                var dY = clientY - draggedTrackPos[1];\n                // calculate the delta of the value\n                var deltaValue = 0;\n                switch (direction) {\n                    case types_1.Direction.Right:\n                    case types_1.Direction.Left:\n                        deltaValue = (dX / trackLength) * (max - min);\n                        break;\n                    case types_1.Direction.Down:\n                    case types_1.Direction.Up:\n                        deltaValue = (dY / trackLength) * (max - min);\n                        break;\n                    default:\n                        (0, utils_1.assertUnreachable)(direction);\n                }\n                // invert for RTL\n                if (rtl) {\n                    deltaValue *= -1;\n                }\n                if (Math.abs(deltaValue) >= step / 2) {\n                    // adjust delta so it fits into the range\n                    for (var i = 0; i < _this.thumbRefs.length; i++) {\n                        if ((values[i] === max && Math.sign(deltaValue) === 1) ||\n                            (values[i] === min && Math.sign(deltaValue) === -1))\n                            return;\n                        var thumbValue = values[i] + deltaValue;\n                        if (thumbValue > max)\n                            deltaValue = max - values[i];\n                        else if (thumbValue < min)\n                            deltaValue = min - values[i];\n                    }\n                    // add the delta to each thumb\n                    var newValues = values.slice(0);\n                    for (var i = 0; i < _this.thumbRefs.length; i++) {\n                        newValues = (0, utils_1.replaceAt)(newValues, i, _this.normalizeValue(values[i] + deltaValue, i));\n                    }\n                    _this.setState({\n                        draggedTrackPos: [clientX, clientY]\n                    });\n                    onChange(newValues);\n                }\n            }\n            else {\n                var newValue = 0;\n                switch (direction) {\n                    case types_1.Direction.Right:\n                        newValue =\n                            ((clientX - trackRect.left) / trackLength) * (max - min) + min;\n                        break;\n                    case types_1.Direction.Left:\n                        newValue =\n                            ((trackLength - (clientX - trackRect.left)) / trackLength) *\n                                (max - min) +\n                                min;\n                        break;\n                    case types_1.Direction.Down:\n                        newValue =\n                            ((clientY - trackRect.top) / trackLength) * (max - min) + min;\n                        break;\n                    case types_1.Direction.Up:\n                        newValue =\n                            ((trackLength - (clientY - trackRect.top)) / trackLength) *\n                                (max - min) +\n                                min;\n                        break;\n                    default:\n                        (0, utils_1.assertUnreachable)(direction);\n                }\n                // invert for RTL\n                if (rtl) {\n                    newValue = max + min - newValue;\n                }\n                if (Math.abs(values[draggedThumbIndex] - newValue) >= step / 2) {\n                    onChange((0, utils_1.replaceAt)(values, draggedThumbIndex, _this.normalizeValue(newValue, draggedThumbIndex)));\n                }\n            }\n        };\n        _this.normalizeValue = function (value, index) {\n            var _a = _this.props, min = _a.min, max = _a.max, step = _a.step, allowOverlap = _a.allowOverlap, values = _a.values;\n            return (0, utils_1.normalizeValue)(value, index, min, max, step, allowOverlap, values);\n        };\n        _this.onEnd = function (e) {\n            e.preventDefault();\n            document.removeEventListener('mousemove', _this.schdOnMouseMove);\n            document.removeEventListener('touchmove', _this.schdOnTouchMove);\n            document.removeEventListener('mouseup', _this.schdOnEnd);\n            document.removeEventListener('touchend', _this.schdOnEnd);\n            document.removeEventListener('touchcancel', _this.schdOnEnd);\n            if (_this.state.draggedThumbIndex === -1 &&\n                _this.state.draggedTrackPos[0] === -1 &&\n                _this.state.draggedTrackPos[1] === -1)\n                return null;\n            _this.setState({ draggedThumbIndex: -1, draggedTrackPos: [-1, -1] }, function () {\n                _this.fireOnFinalChange();\n            });\n        };\n        _this.fireOnFinalChange = function () {\n            _this.setState({ isChanged: false });\n            var _a = _this.props, onFinalChange = _a.onFinalChange, values = _a.values;\n            if (onFinalChange) {\n                onFinalChange(values);\n            }\n        };\n        _this.updateMarkRefs = function (props) {\n            if (!props.renderMark) { // don't create mark refs unless we are rendering marks\n                _this.numOfMarks = undefined;\n                _this.markRefs = undefined;\n                return;\n            }\n            _this.numOfMarks = (props.max - props.min) / _this.props.step;\n            _this.markRefs = [];\n            for (var i = 0; i < _this.numOfMarks + 1; i++) {\n                _this.markRefs[i] = React.createRef();\n            }\n        };\n        _this.calculateMarkOffsets = function () {\n            if (!_this.props.renderMark ||\n                !_this.trackRef ||\n                !_this.numOfMarks ||\n                !_this.markRefs ||\n                _this.trackRef.current === null)\n                return;\n            var elStyles = window.getComputedStyle(_this.trackRef.current);\n            var trackWidth = parseInt(elStyles.width, 10);\n            var trackHeight = parseInt(elStyles.height, 10);\n            var paddingLeft = parseInt(elStyles.paddingLeft, 10);\n            var paddingTop = parseInt(elStyles.paddingTop, 10);\n            var res = [];\n            for (var i = 0; i < _this.numOfMarks + 1; i++) {\n                var markHeight = 9999;\n                var markWidth = 9999;\n                if (_this.markRefs[i].current) {\n                    var markRect = _this.markRefs[i].current.getBoundingClientRect();\n                    markHeight = markRect.height;\n                    markWidth = markRect.width;\n                }\n                if (_this.props.direction === types_1.Direction.Left ||\n                    _this.props.direction === types_1.Direction.Right) {\n                    res.push([\n                        Math.round((trackWidth / _this.numOfMarks) * i + paddingLeft - markWidth / 2),\n                        -Math.round((markHeight - trackHeight) / 2)\n                    ]);\n                }\n                else {\n                    res.push([\n                        Math.round((trackHeight / _this.numOfMarks) * i + paddingTop - markHeight / 2),\n                        -Math.round((markWidth - trackWidth) / 2)\n                    ]);\n                }\n            }\n            _this.setState({ markOffsets: res });\n        };\n        if (props.step === 0) {\n            throw new Error('\"step\" property should be a positive number');\n        }\n        _this.schdOnMouseMove = (0, utils_1.schd)(_this.onMouseMove);\n        _this.schdOnTouchMove = (0, utils_1.schd)(_this.onTouchMove);\n        _this.schdOnEnd = (0, utils_1.schd)(_this.onEnd);\n        _this.thumbRefs = props.values.map(function () { return React.createRef(); });\n        _this.updateMarkRefs(props);\n        return _this;\n    }\n    Range.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, values = _a.values, min = _a.min, step = _a.step;\n        this.resizeObserver = window.ResizeObserver\n            ? new window.ResizeObserver(this.onResize)\n            : {\n                observe: function () { return window.addEventListener('resize', _this.onResize); },\n                unobserve: function () { return window.removeEventListener('resize', _this.onResize); }\n            };\n        document.addEventListener('touchstart', this.onMouseOrTouchStart, {\n            passive: false\n        });\n        document.addEventListener('mousedown', this.onMouseOrTouchStart, {\n            passive: false\n        });\n        !this.props.allowOverlap && (0, utils_1.checkInitialOverlap)(this.props.values);\n        this.props.values.forEach(function (value) {\n            return (0, utils_1.checkBoundaries)(value, _this.props.min, _this.props.max);\n        });\n        this.resizeObserver.observe(this.trackRef.current);\n        (0, utils_1.translateThumbs)(this.getThumbs(), this.getOffsets(), this.props.rtl);\n        this.calculateMarkOffsets();\n        values.forEach(function (value) {\n            if (!(0, utils_1.isStepDivisible)(min, value, step)) {\n                console.warn('The `values` property is in conflict with the current `step`, `min`, and `max` properties. Please provide values that are accessible using the min, max, and step values.');\n            }\n        });\n    };\n    Range.prototype.componentDidUpdate = function (prevProps, prevState) {\n        var _a = this.props, max = _a.max, min = _a.min, step = _a.step, values = _a.values, rtl = _a.rtl;\n        if (prevProps.max !== max ||\n            prevProps.min !== min ||\n            prevProps.step !== step) {\n            this.updateMarkRefs(this.props);\n        }\n        (0, utils_1.translateThumbs)(this.getThumbs(), this.getOffsets(), rtl);\n        // ensure offsets are calculated when the refs for the marks have been created\n        // and those refs have been mounted to the dom\n        // on the state update in calculateOffsets with new markOffsets are calculated\n        if (prevProps.max !== max ||\n            prevProps.min !== min ||\n            prevProps.step !== step ||\n            prevState.markOffsets.length !== this.state.markOffsets.length) {\n            this.calculateMarkOffsets();\n            values.forEach(function (value) {\n                if (!(0, utils_1.isStepDivisible)(min, value, step)) {\n                    console.warn('The `values` property is in conflict with the current `step`, `min`, and `max` properties. Please provide values that are accessible using the min, max, and step values.');\n                }\n            });\n        }\n    };\n    Range.prototype.componentWillUnmount = function () {\n        var options = {\n            passive: false\n        };\n        document.removeEventListener('mousedown', this.onMouseOrTouchStart, options);\n        // These need to be removed!!\n        document.removeEventListener('mousemove', this.schdOnMouseMove);\n        document.removeEventListener('touchmove', this.schdOnTouchMove);\n        document.removeEventListener('touchstart', this.onMouseOrTouchStart);\n        document.removeEventListener('mouseup', this.schdOnEnd);\n        document.removeEventListener('touchend', this.schdOnEnd);\n        this.resizeObserver.unobserve(this.trackRef.current);\n    };\n    Range.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, renderTrack = _a.renderTrack, renderThumb = _a.renderThumb, _b = _a.renderMark, renderMark = _b === void 0 ? function () { return null; } : _b, values = _a.values, min = _a.min, max = _a.max, allowOverlap = _a.allowOverlap, disabled = _a.disabled;\n        var _c = this.state, draggedThumbIndex = _c.draggedThumbIndex, thumbZIndexes = _c.thumbZIndexes, markOffsets = _c.markOffsets;\n        return renderTrack({\n            props: {\n                style: {\n                    // creates stacking context that prevents z-index applied to thumbs\n                    // interfere with other elements\n                    transform: 'scale(1)',\n                    cursor: draggedThumbIndex > -1\n                        ? 'grabbing'\n                        : this.props.draggableTrack\n                            ? (0, utils_1.isVertical)(this.props.direction)\n                                ? 'ns-resize'\n                                : 'ew-resize'\n                            : values.length === 1 && !disabled\n                                ? 'pointer'\n                                : 'inherit'\n                },\n                onMouseDown: disabled ? utils_1.voidFn : this.onMouseDownTrack,\n                onTouchStart: disabled ? utils_1.voidFn : this.onTouchStartTrack,\n                ref: this.trackRef\n            },\n            isDragged: this.state.draggedThumbIndex > -1,\n            disabled: disabled,\n            children: __spreadArray(__spreadArray([], markOffsets.map(function (offset, index, arr) {\n                return renderMark({\n                    props: {\n                        style: _this.props.direction === types_1.Direction.Left ||\n                            _this.props.direction === types_1.Direction.Right\n                            ? {\n                                position: 'absolute',\n                                left: \"\".concat(offset[0], \"px\"),\n                                marginTop: \"\".concat(offset[1], \"px\")\n                            }\n                            : {\n                                position: 'absolute',\n                                top: \"\".concat(offset[0], \"px\"),\n                                marginLeft: \"\".concat(offset[1], \"px\")\n                            },\n                        key: \"mark\".concat(index),\n                        ref: _this.markRefs[index]\n                    },\n                    index: index\n                });\n            }), true), values.map(function (value, index) {\n                var isDragged = _this.state.draggedThumbIndex === index;\n                return renderThumb({\n                    index: index,\n                    value: value,\n                    isDragged: isDragged,\n                    props: {\n                        style: {\n                            position: 'absolute',\n                            zIndex: thumbZIndexes[index],\n                            cursor: disabled ? 'inherit' : isDragged ? 'grabbing' : 'grab',\n                            userSelect: 'none',\n                            touchAction: 'none',\n                            WebkitUserSelect: 'none',\n                            MozUserSelect: 'none',\n                            msUserSelect: 'none'\n                        },\n                        key: index,\n                        tabIndex: disabled ? undefined : 0,\n                        'aria-valuemax': allowOverlap ? max : values[index + 1] || max,\n                        'aria-valuemin': allowOverlap ? min : values[index - 1] || min,\n                        'aria-valuenow': value,\n                        draggable: false,\n                        ref: _this.thumbRefs[index],\n                        role: 'slider',\n                        onKeyDown: disabled ? utils_1.voidFn : _this.onKeyDown,\n                        onKeyUp: disabled ? utils_1.voidFn : _this.onKeyUp\n                    }\n                });\n            }), true)\n        });\n    };\n    Range.defaultProps = {\n        step: 1,\n        direction: types_1.Direction.Right,\n        rtl: false,\n        disabled: false,\n        allowOverlap: false,\n        draggableTrack: false,\n        min: 0,\n        max: 100\n    };\n    return Range;\n}(React.Component));\nexports.default = Range;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkValuesAgainstBoundaries = exports.relativeValue = exports.useThumbOverlap = exports.Direction = exports.getTrackBackground = exports.Range = void 0;\nvar Range_1 = __importDefault(require(\"./Range\"));\nexports.Range = Range_1.default;\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"getTrackBackground\", { enumerable: true, get: function () { return utils_1.getTrackBackground; } });\nObject.defineProperty(exports, \"useThumbOverlap\", { enumerable: true, get: function () { return utils_1.useThumbOverlap; } });\nObject.defineProperty(exports, \"relativeValue\", { enumerable: true, get: function () { return utils_1.relativeValue; } });\nObject.defineProperty(exports, \"checkValuesAgainstBoundaries\", { enumerable: true, get: function () { return utils_1.checkValuesAgainstBoundaries; } });\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"Direction\", { enumerable: true, get: function () { return types_1.Direction; } });\n"],
  "mappings": "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",
  "names": ["Direction", "value", "width", "d", "b", "Range", "_a", "props"]
}
